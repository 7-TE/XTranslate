//-- Mixins

@mixin custom-scrollbar($theme: light, $overlay: false) {
  $themes: (
    light: rgba(255, 255, 255, .25),
    dark: rgba(0, 0, 0, .25)
  );

  $scrollBarSize: $unit * .8;
  $scrollBarColor: if(map_has_key($themes, $theme), map_get($themes, $theme), none);
  $innerBorderSpace: 5px;
  $scrollBarSize: calc(#{$scrollBarSize} + #{$innerBorderSpace} * 2);

  overflow: auto;
  @if ($overlay) {
    overflow: overlay;
    overscroll-behavior: contain;
  }

  // Firefox 65+
  scrollbar-color: $scrollBarColor transparent;
  scrollbar-width: thin;

  // Chrome, safari
  &::-webkit-scrollbar {
    width: $scrollBarSize;
    height: $scrollBarSize;
    background: transparent;
  }

  &::-webkit-scrollbar-thumb {
    background: $scrollBarColor;
    background-clip: padding-box;
    border: $innerBorderSpace solid transparent;
    border-radius: $scrollBarSize;
  }

  &::-webkit-scrollbar-corner {
    background-color: transparent;
  }
}

// Hide scrollbar but keep the element scrollable
@mixin hidden-scrollbar {
  overflow: auto;
  // Chrome, Safari
  &::-webkit-scrollbar {
    width: 0;
    height: 0;
    background: transparent;
  }
  scrollbar-width: none; // Firefox 65+
  -ms-overflow-style: none; // IE (10,11?), Edge(?)
}

// Cross-browser hacks
@mixin safariOnly {
  @media not all and (min-resolution: .001dpcm) {
    @content;
  }
}

@mixin firefoxOnly {
  @-moz-document url-prefix() {
    @content;
  }
}

@mixin edgeOnly {
  @supports (-ms-accelerator: true) {
    @content;
  }
}

// Width, height (5-100%)
@mixin generate-widths-heights {
  $size: 0;
  @while $size < 100 {
    $size: $size + 5;
    $value: 1% * $size;

    .w#{$size} {
      width: $value;
    }
    .h#{$size} {
      height: $value;
    }
    .mw#{$size} {
      min-width: $value;
    }
    .mh#{$size} {
      min-height: $value;
    }
  }
}

// Margin, padding offsets
@mixin generate-offsets($count: 4) {
  $offset: 1;

  @while $offset <= $count {
    $m: $margin * $offset;
    $p: $padding * $offset;

    .m#{$offset} {
      margin: $m;
    }
    .mh#{$offset} {
      margin: 0 $m;
    }
    .mv#{$offset} {
      margin: $m 0;
    }

    .p#{$offset} {
      padding: $p;
    }
    .ph#{$offset} {
      padding: 0 $p;
    }
    .pv#{$offset} {
      padding: $p 0;
    }

    @each $dir in left, right, top, bottom {
      $d: str-slice($dir, 0, 1);
      .m#{$d + $offset} {
        margin-#{$dir}: $m;
      }
      .p#{$d + $offset} {
        padding-#{$dir}: $p;
      }
    }

    $offset: $offset + 1;
  }
}
